GWT audio recorder.


Usage : 

// Create recorder (save button)
final Recorder recorder = new Recorder("images/upload.png");
recorder.setUploadURL("upload.php");

// Create UI
final Label recorderStatus = new Label("Recorder status");

final Button recordButton = new Button("Record");
recordButton.addClickHandler(new ClickHandler() {
	@Override
	public void onClick(ClickEvent event) {
		recorder.record("audio", "audio.wav");
	}
});
recordButton.setEnabled(false);

final Button playButton = new Button("Play");
playButton.addClickHandler(new ClickHandler() {
	@Override
	public void onClick(ClickEvent event) {
		recorder.playBack("audio");
	}
});
playButton.setEnabled(false);

final Label uploadStatus = new Label("");

RootPanel.get().add(recorderStatus);
RootPanel.get().add(recordButton);
RootPanel.get().add(playButton);
RootPanel.get().add(recorder);
RootPanel.get().add(uploadStatus);

// Manage recorder events
recorder.addHandler(RecorderReadyEvent.getType(), new RecorderReadyHandler() {
	@Override
	public void onRecorderReady(RecorderReadyEvent event) {
		recordButton.setEnabled(true);
		recorderStatus.setText("Ready");
	}
});

recorder.addHandler(MicrophoneConnectedEvent.getType(), new MicrophoneConnectedHandler() {
	@Override
	public void onMicrophoneConnected(MicrophoneConnectedEvent event) {
		recorderStatus.setText("Microphone : " + event.getMicrophoneName());
	}
});

recorder.addHandler(RecordingEvent.getType(), new RecordingHandler() {
	@Override
	public void onRecording(RecordingEvent event) {
		recorderStatus.setText("Recording");
		playButton.setEnabled(false);
		recordButton.setText("Stop");
	}
});

recorder.addHandler(RecordingStoppedEvent.getType(), new RecordingStoppedHandler() {
	@Override
	public void onRecordingStopped(RecordingStoppedEvent event) {
		recorderStatus.setText("Recorded " + event.getName() + ", duration : " + event.getDuration()
				+ " seconds");
		recordButton.setText("Record");
		playButton.setEnabled(true);
	}
});

recorder.addHandler(PlayingEvent.getType(), new PlayingHandler() {
	@Override
	public void onPlaying(PlayingEvent event) {
		recorderStatus.setText("Playing " + event.getName());
		recordButton.setText("Record");
		playButton.setText("Stop");
	}
});

recorder.addHandler(PlaybackStoppedEvent.getType(), new PlaybackStoppedHandler() {
	@Override
	public void onPlaybackStopped(PlaybackStoppedEvent event) {
		recorderStatus.setText("Stop playing " + event.getName());
		recordButton.setText("Record");
		playButton.setText("Play");
	}
});

recorder.addHandler(SavedEvent.getType(), new SavedHandler() {
	@Override
	public void onSaved(SavedEvent event) {
		uploadStatus.setText(event.getName() + " saved");
	}
});

recorder.addHandler(SaveFailedEvent.getType(), new SaveFailedHandler() {
	@Override
	public void onSaveFailed(SaveFailedEvent event) {
		uploadStatus.setText("Save fail for " + event.getName() + " : " + event.getError());
	}
});

recorder.addHandler(SaveProgressEvent.getType(), new SaveProgressHandler() {
	@Override
	public void onSaveProgress(SaveProgressEvent event) {
		uploadStatus.setText(event.getByteLoaded() + "/" + event.getBytesTotal());
	}
});